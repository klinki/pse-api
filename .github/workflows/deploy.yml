name: Deploy

on: 
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-test-deploy:
    concurrency: single
    runs-on: ubuntu-latest
    environment: Production
    env:
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
      VERSION: 0
      TAG: 0
      SHORT_COMMIT: 0
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2

      - name: before_install
        run: |-
          openssl aes-256-cbc \
            -K "${{ secrets.encrypted_699ce602e140_key }}" \
            -iv "${{ secrets.encrypted_699ce602e140_iv }}" \
            -in deploy_key.enc \
            -out deploy_key -d
          chmod 600 ./deploy_key
          mkdir ~/.ssh
          echo -e "Host cloud.inviser.cz\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
          echo -e "Host inviser.cz\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

      - name: Login to GitLab
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        run: |-
          TAG=$(git tag --contains $GITHUB_SHA)
          SHORT_COMMIT=$(git rev-parse --short $GITHUB_SHA)
          VERSION=$(git describe --tags --dirty --always)
          docker build \
            --build-arg VERZION=${VERSION} \
            --build-arg SHORT_COMMIT=${SHORT_COMMIT} \
            .

      - name: Test
        run: |-
          docker build \
            --build-arg VERZION=${VERSION} \
            --build-arg SHORT_COMMIT=${SHORT_COMMIT} \
            --target test \
            .
          docker build \
            --build-arg VERZION=${VERSION} \
            --build-arg SHORT_COMMIT=${SHORT_COMMIT} \
            --target export-test-results \
            --output type=local,dest=TestResults \
            .

      - name: Test Report
        if: always() # Run even if tests fail
        uses: dorny/test-reporter@v1
        with:
          name: Test Results            # Name of the check run which will be created
          path: "**/TestResults/*.xml"    # Path to test results
          reporter: java-junit        # Format of test results

      - name: Build Image
        run: |-
          TAG=$(git tag --contains $GITHUB_SHA)
          SHORT_COMMIT=$(git rev-parse --short $GITHUB_SHA)
          VERSION=$(git describe --tags --dirty --always)
          docker build \
            -t registry.gitlab.com/klinki/docker-registry/pse:latest \
            -t registry.gitlab.com/klinki/docker-registry/pse:${VERSION} \
            --build-arg VERZION=${VERSION} \
            --build-arg SHORT_COMMIT=${SHORT_COMMIT} \
            .

      - name: Deploy
        if: ${{ github.ref_name == 'master' }}
        run: |-
          chmod +x ./travis-deploy.sh
          chmod +x ./deploy.sh
          ./travis-deploy.sh
